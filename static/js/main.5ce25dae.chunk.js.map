{"version":3,"sources":["img/다운로드.png","componentes/views/LandingPage/LandingPage.js","_actions/types.js","_actions/user_action.js","componentes/views/LoginPage/LoginPage.js","componentes/views/RegisterPage/RegisterPage.js","componentes/views/Community/Community.js","hoc/auth.js","componentes/App.js","reportWebVitals.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["withRouter","props","useEffect","axios","get","then","response","console","log","data","className","to","AliwangwangOutlined","style","fontSize","marginLeft","color","onClick","success","history","push","alert","QqOutlined","LOGIN_USER","REGISTER_USER","AUTH_USER","auth","request","type","payload","dispatch","useDispatch","display","justifyContent","alignItems","width","height","name","initialValues","remember","onFinish","values","dataTosubmit","post","loginUser","loginSuccess","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","valuePropName","noStyle","href","htmlType","formItemLayout","Select","Option","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Form","useForm","form","useState","password","ConfirmPassword","registerUser","scrollToFirstError","label","hasFeedback","Password","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","tooltip","whitespace","Community","SpecificComponent","option","adminRouter","AuthenticationCheck","isAuth","isAdmin","App","exact","path","component","LandingPage","Auth","LoginPage","RegisterPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","user","state","action","regiser","userData","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","window","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.5ce25dae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/다운로드.d8ee1a27.png\";","import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, withRouter } from 'react-router-dom';\nimport './LandingPage.css';\nimport iconMain from '../../../img/다운로드.png';\nimport iconHome from '../../../img/home.png';\nimport { AliwangwangOutlined, QqOutlined } from '@ant-design/icons';\n\nfunction LandingPage(props) {\n    useEffect(() => {\n        axios.get('/api/hello').then((response) => console.log(response.data));\n    }, []);\n\n    const onClickHandler = () => {\n        axios.get('/api/users/logout').then((response) => {\n            if (response.data.success) {\n                props.history.push('/login');\n            } else {\n                alert('로그아웃 하는데 실패했습니다.');\n            }\n        });\n    };\n\n    // const onClicklogin = () => {\n\n    // }\n\n    return (\n        <div>\n            <div className=\"Link\">\n                <div className=\"Home\">\n                    <Link to=\"/\">\n                        <AliwangwangOutlined\n                            style={{ fontSize: '40px', marginLeft: '14px', color: 'black' }}\n                        />\n                    </Link>\n                </div>\n                <div className=\"Menu\">\n                    <Link to=\"/Community\">커뮤니티</Link>\n                </div>\n                <div className=\"Log\">\n                    <Link to=\"/login\">로그인</Link>\n                    <Link onClick={onClickHandler}>로그아웃</Link>\n                </div>\n            </div>\n            <div className=\"body\">\n                <QqOutlined style={{ fontSize: '4rem' }} />\n                <span style={{ fontSize: '2rem' }}>hello hansol homepage default</span>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(LandingPage);\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\n","import axios from 'axios';\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER } from './types';\n\nexport function loginUser(dataTosubmit) {\n    const request = axios.post('/api/users/login', dataTosubmit).then((response) => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request,\n    };\n}\n\nexport function registerUser(dataTosubmit) {\n    const request = axios\n        .post('/api/users/register', dataTosubmit)\n        .then((response) => response.data);\n\n    return {\n        type: REGISTER_USER,\n        payload: request,\n    };\n}\n\nexport function auth() {\n    const request = axios.get('/api/users/auth').then((response) => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request,\n    };\n}\n","import axios from 'axios';\n// import { response } from 'express';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from '../../../_actions/user_action';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './LoginPage.css';\n\nconst LoginPage = (props) => {\n    const dispatch = useDispatch();\n\n    const onFinish = (values) => {\n        dispatch(loginUser(values)).then((response) => {\n            if (response.payload.loginSuccess) {\n                props.history.push('/');\n            } else {\n                alert('Error');\n            }\n        });\n    };\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                width: '100%',\n                height: '100vh',\n            }}\n        >\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    name=\"email\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Username!',\n                        },\n                    ]}\n                >\n                    <Input\n                        prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                        placeholder=\"Username\"\n                    />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Password!',\n                        },\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                        <Checkbox>Remember me</Checkbox>\n                    </Form.Item>\n\n                    <a className=\"login-form-forgot\" href=\"\">\n                        Forgot password\n                    </a>\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Log in\n                    </Button>\n                </Form.Item>\n                Or <a href=\"/register\">register now!</a>\n            </Form>\n        </div>\n    );\n};\n\nexport default withRouter(LoginPage);\n","import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from '../../../_actions/user_action';\nimport { withRouter } from 'react-router-dom';\n\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nconst { Option } = Select;\n\nconst formItemLayout = {\n    labelCol: {\n        xs: {\n            span: 24,\n        },\n        sm: {\n            span: 8,\n        },\n    },\n    wrapperCol: {\n        xs: {\n            span: 24,\n        },\n        sm: {\n            span: 16,\n        },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nconst RegisterPage = (props) => {\n    const dispatch = useDispatch();\n    const [form] = Form.useForm();\n\n    const onFinish = (values) => {\n        if (values.password !== values.ConfirmPassword) {\n            return alert('비밀번호와 비밀번호 확인은 같아야 합니다.');\n        }\n\n        dispatch(registerUser(values)).then((response) => {\n            if (response.payload.success) {\n                props.history.push('/login');\n            } else {\n                alert('Failed to sign up');\n            }\n        });\n    };\n\n    const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                width: '100%',\n                height: '100vh',\n            }}\n        >\n            <Form\n                {...formItemLayout}\n                form={form}\n                name=\"register\"\n                onFinish={onFinish}\n                scrollToFirstError\n            >\n                <Form.Item\n                    name=\"email\"\n                    label=\"E-mail\"\n                    rules={[\n                        {\n                            type: 'email',\n                            message: 'The input is not valid E-mail!',\n                        },\n                        {\n                            required: true,\n                            message: 'Please input your E-mail!',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"password\"\n                    label=\"Password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"ConfirmPassword\"\n                    label=\"Confirm\"\n                    dependencies={['password']}\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        ({ getFieldValue }) => ({\n                            validator(_, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                    return Promise.resolve();\n                                }\n\n                                return Promise.reject(\n                                    new Error('The two passwords that you entered do not match!')\n                                );\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"name\"\n                    label=\"name\"\n                    tooltip=\"What do you want others to call you?\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your name!',\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"phonenumber\"\n                    label=\"Phone\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your phone number!',\n                        },\n                    ]}\n                >\n                    <Input\n                        style={{\n                            width: '100%',\n                        }}\n                    />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"agreement\"\n                    valuePropName=\"checked\"\n                    rules={[\n                        {\n                            validator: (_, value) =>\n                                value\n                                    ? Promise.resolve()\n                                    : Promise.reject(new Error('Should accept agreement')),\n                        },\n                    ]}\n                    {...tailFormItemLayout}\n                >\n                    <Checkbox>\n                        I have read the <a href=\"\">agreement</a>\n                    </Checkbox>\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\nexport default withRouter(RegisterPage);\n","import React from 'react';\n\nconst Community = () => {\n    return <div>Community</div>;\n};\n\nexport default Community;\n","import axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { auth } from '../_actions/user_action';\n\nexport default function (SpecificComponent, option, adminRouter = null) {\n    //null    => 아무나 출입이 가능한 페이지\n    //true    => 로그인 한 유저만 출입이 가능한 페이지\n    //false   => 로그인한 유저는 출입 불가능한 페이지\n\n    function AuthenticationCheck(props) {\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            dispatch(auth()).then((response) => {\n                console.log(response);\n\n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login');\n                    }\n                } else {\n                    if (adminRouter && !response.payload.isAdmin) {\n                        props.history.push('/');\n                    } else {\n                        if (option === false) props.history.push('/');\n                    }\n                }\n            });\n        }, []);\n\n        return <SpecificComponent />;\n    }\n\n    return AuthenticationCheck;\n}\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport LandingPage from './views/LandingPage/LandingPage';\nimport LoginPage from './views/LoginPage/LoginPage';\nimport RegisterPage from './views/RegisterPage/RegisterPage';\nimport Community from './views/Community/Community';\nimport Auth from '../hoc/auth';\n\nfunction App() {\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n                    <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n                    <Route exact path=\"/Community\" component={Community} />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;\n","import { LOGIN_USER, REGISTER_USER, AUTH_USER } from '../_actions/types';\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loginSuccess: action.payload };\n            break;\n\n        case REGISTER_USER:\n            return { ...state, regiser: action.payload };\n            break;\n\n        case AUTH_USER:\n            return { ...state, userData: action.payload };\n            break;\n\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './componentes/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport 'antd/dist/antd.css';\nimport { applyMiddleware, createStore } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport Reducer from './_reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <App />\n    </Provider>,\n\n    // <React.StrictMode>\n    //     <App />\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}